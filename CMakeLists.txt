# Copyright (C) 2019 Istituto Italiano di Tecnologia (IIT). All rights reserved.
# This software may be modified and distributed under the terms of the
# GNU Lesser General Public License v2.1 or any later version.

cmake_minimum_required(VERSION 3.7)
project(ExampleRosToolbox LANGUAGES CXX VERSION 0.1)

# C++ standard
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Build type
if(NOT CMAKE_CONFIGURATION_TYPES)
    if(NOT CMAKE_BUILD_TYPE)
        set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build" FORCE)
    endif()
    set(ROS_BUILD_TYPES "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS ${ROS_BUILD_TYPES})
endif()

# Export all symbols in Windows
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)

# Utility for defining install folders
include(GNUInstallDirs)

# Tweak linker flags in Linux.
# Matlab is very strict on missing symbols and by default ld do not warn if
# something is missing.
if(UNIX AND NOT APPLE AND NOT "${CMAKE_BUILD_TYPE}" STREQUAL "Release")
    get_filename_component(LINKER_BIN ${CMAKE_LINKER} NAME)
    if(${LINKER_BIN} STREQUAL "ld")
        set(CMAKE_SHARED_LINKER_FLAGS "-Wl,--unresolved-symbols=report-all")
    endif()
endif()

# ===========
# C++ LIBRARY
# ===========

# Find the needed BlockFactory components:
# - "Core" contains the core classes such as Block and Signal
# - "Simulink" is required at runtime for loading the library from Simulink
find_package(BlockFactory
    REQUIRED COMPONENTS Core
    OPTIONAL_COMPONENTS Simulink)

# Find the C++ ROS libraries
find_package(roscpp REQUIRED)

# Include CMake helpers provided by BlockFactory
include(BlockFactoryPlugin)

register_blockfactory_block(
    BLOCK_NAME RosTopicPublisher
    PLUGIN_NAME RosToolbox
    SOURCES src/RosTopicPublisher.cpp
    HEADERS include/RosTopicPublisher.h)

register_blockfactory_block(
    BLOCK_NAME RosTopicSubscriber
    PLUGIN_NAME RosToolbox
    SOURCES src/RosTopicSubscriber.cpp
    HEADERS include/RosTopicSubscriber.h)

# Create the plugin library
add_blockfactory_plugin(RosToolbox
    EXTRA_SOURCES src/Factory.cpp)

# Link the library with the external dependencies
target_link_libraries(RosToolbox PRIVATE ${roscpp_LIBRARIES})

# Setup the include directories
target_include_directories(RosToolbox PRIVATE
    ${roscpp_INCLUDE_DIRS}
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>)

if(WIN32)
    target_compile_definitions(RosToolbox PRIVATE ROS_BUILD_SHARED_LIBS=1)
endif()

# ==================
# AUTOGENERATED CODE
# ==================

find_package(Matlab COMPONENTS
    MX_LIBRARY
    ENG_LIBRARY
    MAIN_PROGRAM
    SIMULINK)

if(${Matlab_SIMULINK_FOUND})
    # Build the autogenerated class
    add_subdirectory(matlab)

    # Create the executable
    add_executable(main src/main.cpp)
    target_link_libraries(main RosPubSubExample)
endif()

# ==========================
# INSTALL THE PLUGIN LIBRARY
# ==========================

install_blockfactory_plugin(RosToolbox)
